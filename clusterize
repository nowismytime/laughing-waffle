package Graphs;
import java.util.*;
public class clusterize extends disjointsets {
	public static List<Map<String, Set<String>>> agCluster (ArrayList<ArrayList<Integer>> geomatrix, HashMap<Integer, String> words, int now)
	{
		// using github directory directly
		// create disjoint sets for all elements
		DisjointSets();
		for(int i=0;i<words.size();i++)
			SetCreate(words.get(i));
		while(disjointSet.size()>80)
		{
			//System.out.println(x);
			int N = geomatrix.get(0).size();
			int imin = -1;
			int jmin = -1;
			int min = 9999;
			for(int i=0;i<N;i++)
			{
				for(int j=0;j<N;j++)
				{
					if(geomatrix.get(i).get(j)!=0&&geomatrix.get(i).get(j)<min)
					{
						imin=i;
						jmin=j;
						min=geomatrix.get(i).get(j);
					}
				}
			}
			String first = words.get(imin);
			String second = words.get(jmin);
			geomatrix.get(imin).set(jmin,9999);
			
			if(!(SetFind(first).equals(SetFind(second))))
				union(first,second);
		}
		
		/*for(int i=0;i<disjointSet.size();i++)
		{
			Map<String, Set<String>> map = disjointSet.get(i);
			Set<String> keySet = map.keySet();
			
			for(String key : keySet)
			{
				System.out.println(key);
				Set<String> set = map.get(key);
				for(String element: set)
					System.out.print(element+" ");
				System.out.println();
			}
			System.out.println(i);
		}*/
		return disjointSet;
	}

}
